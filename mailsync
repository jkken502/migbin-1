#!/bin/bash

# make sure destination user is defined
if [[ -z "$USER" ]]
then
  user="$USER"
else
  user=$(whoami)
fi

# check to make sure user is not root.
if [[ "$user" == 'root' || -z "$user" ]]
then
  echo "Cannot run as root. Please dj in before running mailsync."
  exit 1
fi

# Get directory paths for destination
homedir=$(pwd | cut -d '/' -f 1,2,3)
migdir="${homedir}/migration/migstuff"

# check to see if ssh has already been setup and directories are present
if [[ ! -d ${migdir} || ! -s ${migdir}/source.txt || ! -s ${migdir}/id_rsa ]]
then
  setupssh
  mkdir -p "${migdir}"/logs/ 2>/dev/null
fi

# Get SSH credentials for connection
creds=$(cat "${migdir}"/source.txt)
keyFile="${migdir}/id_rsa"
sshConn="ssh -q -i ${keyFile} ${creds}"

# Test SSH connection
function testConn() {
    ${sshConn} exit
    echo $?
}

echo -n "Checking SSH connection to source. "
connStatusCode=$(testConn)

if [[ "$connStatusCode" == '255' ]]
then
  connStatus='fail'
  echo "Connection $connStatus"
  exit 1
elif [[ "$connStatusCode" == '0' ]]
then
  connStatus='success'
  echo "Connection $connStatus"
else
  echo 'unexpected output, check ssh connection files and credentials'
fi

# Get the source user mail directory path and contents
srcHome=`${sshConn} "pwd && exit"`

# Write the rsync lines
if [[ -z "$1" ]]
then
  rsync -avP -e "ssh -i ${keyFile}" ${creds}:${srcHome}/mail/ ${homedir}/mail/
  rsync --ignore-existing -avP -e "ssh -i ${keyFile}" ${creds}:${srcHome}/etc/ ${homedir}/etc/
else
  rsync -avP -e "ssh -i ${keyFile}" ${creds}:${srcHome}/mail/${1}/ ${homedir}/mail/${1}/
  rsync --ignore-existing -avP -e "ssh -i ${keyFile}" ${creds}:${srcHome}/etc/${1}/ ${homedir}/etc/${1}/
fi
